
@startuml

skinparam sequence {
	ArrowColor Black
	ActorBorderColor Black
	LifeLineBorderColor Black
	
	ParticipantBorderColor Black
}

title Connect 3DSv2 flow with Method URL

actor 		"Client browser" as cb
participant "Merchant server" as mse
participant RPP
participant "Hazelcast (3DS session)" as hc
participant Gateway as gw
participant PE
participant "3DS-server" as 3ds
participant "ACS/Issuer" as acs


3ds->acs:		PReq
acs-->3ds:		3DSv2 with methodUrl
note right of 3ds
	Initialisation of 3DS version and
	methodUrl availibility per issuer.
	The information exchanged here is
	expected to be cached by the 3ds server.
end note
note over cb
	In order to indicate what domain(s) is (are) currently
	active in the browser the following colors are being used:
	<font color=orange>- Merchant's site = Orange</font>
	<font color=green>- RPP page = Green</font>
	<font color=blue>- Method page = Blue</font>
	<font color=purple>- Challenge page = Purple</font> 
end note
activate cb #Orange
cb->mse:			Checkout
mse-->cb:			Show CC Detail page
cb->cb:				Fill in Card details
cb->mse:			Submit CC Details
mse->gw:			Create Payment
note right of mse
	This Create Payment call should
	already contain as many of the
	new fields as the merchant can
	provide.
	Also they should provide a returnurl
	that Connect will use to send the
	consumer back to their site, once the
	3DS authentication has finished.
end note
gw->PE:				INSERT_ORDER_WITH_PAYMENT
note right of gw
	Connect provides AReq values here.
end note
PE->3ds:			Determine 3DS version
3ds->3ds:			Retrieve cached info
3ds-->PE:			methodUrl
PE-->gw:			DO_PAYMENT Response
note right of gw
	Containing:
	- Status 50
	- methodUrl
end note
gw->gw:				Create HC Session
note right of gw
	The merchant is expected to
	redirect to this session.
end note
gw-->mse:			Create Payment Response
note right of mse
	Containing:
	- Status 50
	- MerchantAction with:
		- Type REDIRECT
		- HC Session URL
end note
mse-->cb:			Redirect to RPP URL
cb->RPP:			Load RPP URL
deactivate cb
RPP->gw:			Get session data
gw-->RPP:			Session data
RPP->hc:			Create 3DS Session
note over hc
	This session will:
	- Contain a Transaction ID
	- Contain the Payment ID
	- A TimeStamp, partially for validating 10 seconds have passed
	- Keep track of notifications received
end note
hc-->RPP:			Transaction ID
RPP-->cb:			RPP 3DSv2 page
loop until ThirdPartyStatus == COMPLETED
	activate cb #green
	note right of cb
		From here on the Merchant's page is expected to start performing a periodic Poll for 
		the ThirdPartyStatus, indicated by the Green activation. The goal of the polling is 
		to know when the ACS method has finished processing, and to find out whether a challenge 
		is required, or that the payment is finished. The statusses that can be returned are:
		- <b>WAITING</b> Payment is still in progress
		- <b>CHALLENGE</b> There is a 3DS Challenge required
			In this case the Challenge information is also provided
		- <b>COMPLETED</b> The payment has concluded
	end note
	cb-[#green]>gw:		get ThirdPartyStatus
	gw->PE:				Check Payment Status
	PE-->gw:			Status = 50
	gw->hc:				Check 3DS session
	hc-->gw:			No changes
	gw-[#green]->cb:	ThirdPartyStatus = WAITING
end
cb-[#blue]>acs:		POST to the MethodUrl
activate cb #Blue
note right of cb
	POST contains:
	- 3DS method notification URL
	- Transaction ID
end note
acs-[#blue]->cb:	return Method page
cb-[#blue]>acs:		data collection
alt Notification received
	cb-[#blue]>RPP:	Method finished notification
	RPP->hc:		Update cache\nNotification received
deactivate cb #Blue
	cb-[#green]>gw: get ThirdPartyStatus
	gw->PE:			Check Payment Status
	PE-->gw:		Status = 50
	gw->hc:			Check 3DS session
	hc-->gw:		Notification received
	gw-[#green]->cb:ThirdPartyStatus = WAITING
else No notification after 10 seconds
	note over RPP
		No Notification was received
		in this scenario.
	end note
	RPP->RPP:	10 Seconds passed
	RPP->hc:	Update cache\n<font color=red>Timed out?</font>
activate cb #Blue
	note over cb
		Actually it is unclear here what the activity status
		of the method URL is. It is not notifying, so 
		probably something went wrong in the Method.
	end note
destroy cb #Blue
	cb-[#green]>gw: get ThirdPartyStatus
	gw->PE:				Check Payment Status
	PE-->gw:			Status = 50
	gw->hc:				Check 3DS session
	hc-->gw:			No changes
	gw-[#green]->cb:ThirdPartyStatus = WAITING
end
RPP->gw:			Start authentication, Transaction ID included
gw->PE: 			DO_AUTHENTICATE
PE->3ds
3ds->acs:			AReq
acs-->3ds:			ARes
3ds-->PE
alt DO_AUTHENTICATE Response contains challenge
	PE-->gw:		DO_AUTHENTICATE Response
	note right of gw
	Containing:
	- Paymentstatus 50
	- merchantAction REDIRECT
	- ACSurl
	- Base64 formatted CReq
	end note
	gw->gw:			Cache redirect data\nin Redirector cache
	gw-->RPP:		Authentication response
	note right of RPP
		Contains the Redirector URL, which was
		created on caching the redirect data
	end note
	RPP->hc:		Store Redirector URL
	cb-[#green]>gw:	get ThirdPartyStatus
	gw->PE:				Check Payment Status
	PE-->gw:			Status = 50
	gw->hc:				Check 3DS session
	hc-->gw:			Redirector URL available\n(therefore challenge required)
	gw-[#green]->cb:	ThirdPartyStatus = CHALLENGE, also contains Redirector URL
	cb-[#green]>RPP:	Redirect to Redirector URL
	RPP->gw:			Retrieve Redirect data\nWith key that is in URL (This is existing functionality)
	gw-->RPP:			Redirect data
	RPP-[#green]->cb:	Redirect form post
	note right of cb
		The RPP will POST to an external page 
		here to have the issuer serve the Challenge interface. Actions
		of this page are depicted in purple. 3rd party status polling
		will stop here.
	end note
	deactivate cb #green
	cb-[#purple]>acs:		Load the CReq URL
	activate cb #purple
	acs-[#purple]->cb:		Authentication page
	cb-[#purple]>acs:		Provide authentication
	acs->3ds:				RReq
	note right of 3ds #FFAAAA
		Do we do something with this
		RReq?
	end note
	3ds-->acs:				RRes (Ack RReq Received)
	acs-[#purple]->cb:		Initiate CRes
	cb-[#purple]>RPP:				CRes
	deactivate cb #purple
	note right of RPP
		The URL where this CRes should be posted to
		will be a new 3DsReturnServlet.
	end note
	RPP->hc:			Update cache
	RPP->gw:			trigger finalize payment
	gw->PE:				PROCESS_RETURNED_CONNECT
	PE-->gw
	gw-->RPP
	RPP-[#green]->cb:	Redirect to merchant\n(Or result page)
	activate cb #green
else DO_AUTHENTICATE Response Does not contain Challenge (Frictionless)
	PE-->gw:		DO_AUTHENTICATE Response
	note right of gw3ds
	Containing:
	- Paymentstatus >= 600
	end note
	gw-->RPP:		Authentication response
	RPP->hc:		Update cache
	RPP-[#green]->cb:Direct to merchant/n(or result page)
	cb-[#green]>gw:	get ThirdPartyStatus	
	gw->PE:				Check Payment Status
	PE-->gw:			Status >= 600
	gw-[#green]->cb:ThirdPartyStatus = COMPLETED
	cb->RPP:			Request redirect to merchant
	RPP-->cb:			Redirect to merchant
end
cb->mse:			Load merchant page
deactivate cb
mse->gw:			get Payment Result
gw->PE:				get Payment
PE-->gw:			Payment
gw-->mse:			payment result
mse-->cb:			Result page
activate cb #orange
